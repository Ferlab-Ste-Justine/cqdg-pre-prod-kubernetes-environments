apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
spec:
  replicas: 2
  template:
    spec:
      volumes:
        - name: ingress-ca-certificate
          secret:
            secretName: cqdg-ingress-ca-certificate
            defaultMode: 0555
        - name: opensearch-ca-cert
          secret:
            secretName: opensearch-ca-certificate
            defaultMode: 0555
        - name: ca-bundle
          emptyDir: {}
        - name: corefile
          configMap:
            name: coredns-zonefiles-corefile
            defaultMode: 0444
        - name: zonefile
          configMap:
            name: qa-domain-zonefile
            defaultMode: 0444
        - name: zonefile-copy
          emptyDir: {}
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 127.0.0.1
        searches:
          - search
          - cqdg-qa.svc.cluster.qa.cqdg
          - svc.cluster.qa.cqdg
          - cluster.qa.cqdg
          - juno
        options:
          - name: ndots
            value: "5"
      initContainers:
        - name: ca-bundler
          image: alpine:3.13.6
          command: ["sh"]
          args: ["-c", "cat /opt/opensearch-ca/ca.crt /opt/ingress-ca/ca.pem > /opt/ca-bundle/ca.pem"]
          volumeMounts:
            - name: ingress-ca-certificate
              mountPath: /opt/ingress-ca
              readOnly: true
            - name: ca-bundle
              mountPath: /opt/ca-bundle
            - name: opensearch-ca-cert
              mountPath: /opt/opensearch-ca
              readOnly: true
        - name: copy-zonefile
          image: alpine:3.13.6
          command: ["sh"]
          args: ["-c", "cp /opt/zonefiles/* /opt/zonefiles-copy/"]
          volumeMounts:
            - name: zonefile
              mountPath: /opt/zonefiles
              readOnly: true
            - name: zonefile-copy
              mountPath: /opt/zonefiles-copy
      containers:
        - name: coredns
          image: ferlabcrsj/coredns:1.1.1
          command: ["/coredns"]
          args: ["-conf", "/opt/corefile/Corefile"]
          volumeMounts:
            - name: corefile
              mountPath: /opt/corefile
              readOnly: true
            - name: zonefile-copy
              mountPath: /opt/zonefiles
              readOnly: true
        - name: keycloak
          image: index.docker.io/ferlabcrsj/cqdg-keycloak:996735ce3cb37e438cb81cdcc7bced8314f116f8-1697741970 # {"$imagepolicy": "cqdg-qa-fluxcd:keycloak"}
          args: ["start --optimized"]
          env:
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-qa-keycloak-credentials
                  key: username
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-qa-keycloak-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-qa-keycloak-credentials
                  key: password
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-qa-keycloak-credentials
                  key: password
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-credentials
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-credentials
                  key: password
            - name: DB_VENDOR
              value: postgres
            - name: KC_DB
              value: postgres
            - name: DB_ADDR
              value: postgres-server-qa
            - name: KC_DB_URL_HOST
              value: postgres-server-qa
            - name: DB_PORT
              value: "5432"
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: DB_DATABASE
              value: keycloak_qa
            - name: KC_DB_URL_DATABASE
              value: keycloak_qa
            - name: JDBC_PARAMS
              value: 'sslmode=verify-full&sslrootcert=/opt/ca/ca.pem'
            - name: KC_PROXY
              value: edge
          volumeMounts:
            - name: ca-certificate
              mountPath: /opt/ca
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
      volumes:
        - name: ca-certificate
          secret:
            secretName: postgres-qa-ca-certificate
            defaultMode: 0555
